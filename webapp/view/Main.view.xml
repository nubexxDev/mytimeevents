<mvc:View controllerName="hr.computacenter.mytimeevents.controller.Main" xmlns="sap.m" xmlns:mvc="sap.ui.core.mvc" xmlns:f="sap.f"
	xmlns:form="sap.ui.layout.form" xmlns:u="sap.ui.unified" xmlns:l="sap.ui.layout" xmlns:w="sap.ui.integration.widgets"
	xmlns:cssgrid="sap.ui.layout.cssgrid" xmlns:core="sap.ui.core" displayBlock="true">
	<App>
		<pages>
			<Page >
				<content>
					<Page class="sapUiResponsiveContentPadding">
						<headerContent>
							<!--			<Button text="{i18n>buttonCreateText}" tooltip="{i18n>buttonCreateText}" type="Emphasized" press="onPressCreate"
								visible="{= ${VisibleCreate} ? ${VisibleCreate} : false }" enabled="{ parts: [ { path: 'EnabledCreate'}, { path: 'StartWorking' }, { path: 'EndWorking' } ], formatter : '.validateButton' }"/>
			-->
							<!--<Button id="createButton" text="{i18n>buttonCreateText}" tooltip="{i18n>buttonCreateText}" type="Emphasized" press="onPressCreate"-->
							<!--	visible="{= ${VisibleCreate} ? ${VisibleCreate} : false  &amp;&amp; ${controlModel>/isDisplayMode} === true &amp;&amp; ${controlModel>/isDateSelected} === true}" enabled="{= ${EnabledCreate} ? ${EnabledCreate} : false }"/>-->
							<Button id="createButton" text="{i18n>buttonCreateText}" tooltip="{i18n>buttonCreateText}" type="Emphasized" press="onPressCreate"
								visible="{= ${VisibleCreate} === true &amp;&amp; ${controlModel>/isDisplayMode} === true &amp;&amp; ${controlModel>/isDateSelected} === true}"
								enabled="{= ${EnabledCreate} ? ${EnabledCreate} : false }"/>
							<!--		<Button text="{i18n>buttonEditText}" tooltip="{i18n>buttonEditText}" press="onPressEdit"
								visible="{= ${VisibleEdit} ? ${VisibleEdit} : false }" enabled="{ parts: [ { path: 'EnabledEdit'}, { path: 'StartWorking' }, { path: 'EndWorking' } ], formatter : '.validateButton' }"/>
			-->
							<Button id="editButton" text="{i18n>buttonEditText}" tooltip="{i18n>buttonEditText}" press="onPressEdit"
								visible="{= ${VisibleEdit} === true &amp;&amp; ${controlModel>/isDisplayMode} === true &amp;&amp; ${controlModel>/isDateSelected} === true }"
								enabled="{= ${EnabledEdit} ? ${EnabledEdit} : false }"/>
							<Button id="deleteButton" text="{i18n>buttonDeleteText}" tooltip="{i18n>buttonDeleteText}" press="onPressDelete"
								visible="{= ${VisibleDelete} === true &amp;&amp; ${controlModel>/isDateSelected} === true }"
								enabled="{= ${EnabledDelete} ? ${EnabledDelete} : false }"/>
						</headerContent>
						<content>
							<l:VerticalLayout width="100%" class="gridWrapper">
								<l:Grid containerQuery="true" defaultSpan="XL4 L6 M8">
									<VBox>
										<u:Calendar id="timeCalendar" width="80%" firstDayOfWeek="1" nonWorkingDays="{controlModel>/NonWorkingDays}" select="onSelectDay"
											startDateChange="onChangeMonth" legend="calendarLegend"/>
										<VBox width="80%">
											<u:CalendarLegend id="calendarLegend">
												<u:items>
													<u:CalendarLegendItem text="{i18n>calendarLegendMaintained}" color="#1cb048"/>
													<u:CalendarLegendItem text="{i18n>calendarLegendNotMaintained}" color="#ff7e29"/>
												</u:items>
											</u:CalendarLegend>
										</VBox>
									</VBox>
									<VBox>
										<core:Fragment fragmentName="hr.computacenter.mytimeevents.view.fragments.formCalendarEdit" type="XML"/>
										<core:Fragment fragmentName="hr.computacenter.mytimeevents.view.fragments.formCalendarDisplay" type="XML"/>
									</VBox>
								</l:Grid>
							</l:VerticalLayout>
						</content>
						<footer>
							<OverflowToolbar id="footerActionButtons">
								<Button id="btnOpenMessagePopOver" icon="sap-icon://message-popup" enabled="{= ${messages>/}.length > 0}"
									text="{= ${messages>/}.length > 0 ? ${messages>/}.length : null } " type="{= ${messages>/}.length > 0 ? 'Emphasized' : 'Default' }"
									press="onOpenMessagePopover"/>
								<!--<Button icon="{ path: '/', formatter: '.buttonIconFormatter' }"-->
								<!--	type="{ path: '/', formatter: '.buttonTypeFormatter' }"-->
								<!--	text="{path: '/', formatter: '.highestSeverityMessages' }"-->
								<!--	press=".handleMessagePopoverPress"/>-->
							
								<ToolbarSpacer/>
								<Button type="Accept" text="{i18n>buttonSaveText}" press="onPressSave" visible="{= !${controlModel>/isDisplayMode}}">
									<layoutData><OverflowToolbarLayoutData priority="NeverOverflow"/></layoutData>
								</Button>
								<Button type="Reject" text="{i18n>buttonCancelText}" press="onPressCancel" visible="{= !${controlModel>/isDisplayMode}}">
									<layoutData><OverflowToolbarLayoutData priority="NeverOverflow"/></layoutData>
								</Button>
							</OverflowToolbar>
						</footer>
					</Page>
				</content>
			</Page>
		</pages>
	</App>
</mvc:View>